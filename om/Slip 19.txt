#include<stdio.h>
#include<conio.h>
#define MAX 50
char a[MAX];
int top=-1;
void push(char c)
{
top++;
a[top]=c;
}
char pop()
{
char c;
c=a[top];
top--;
return c;
}
void main()
{
int i;
clrscr();
printf("\n\nENTER THE STRING");
gets(a);
for(i=0;a[i]!='"'; i++)
{
if(a[i]==' ')
{
while(top!=-1)
{
printf("%c",pop());
}
printf(" ");
}
else
{
if(top==MAX-1)
{
printf("\n\nSTACK IS FULL");
}
else
{
push(a[i]);
}
}
}
while(top!=-1)
{
printf("%c",pop());
}
getch();
}



include<stdio.h>
#include<stdlib.h>
void append();
void display();
struct node {
	int data;
	struct node *link;
};

struct node *root = NULL;

void main() {
	int ch;

	while(1) {
		printf("\nMenu\n");
		printf("1. Append\n");
		printf("2. Display\n");
		printf("3. Exit\n");

		printf("Enter your choice: ");
		scanf("%d", &ch);

		switch(ch) {
			case 1: append();
					break;

			case 2: display();
					break;

			case 3: exit(1);

			default: printf("\nINVALID INPUT!!\n");
		}
	}
}

void append() {
	struct node *temp;

	temp = (struct node*)malloc(sizeof(struct node));

	printf("Enter node data: ");
	scanf("%d", &temp->data);
	temp->link = NULL;

	if(root == NULL) {
		root = temp;
	}
	else {
		struct node* p;

		p = root;

		while(p->link != NULL) {
			p = p->link;
		}

		p->link = temp;
	}

	printf("\nData entered successfully.\n");
}
void display() {
	int counter = 0;
	struct node* temp;
	temp = root;
	
	if(temp == NULL) {
		printf("\nLIST IS EMPTY!!\n");
	}
	else {
		printf("\n");
		while(temp != NULL) {
			if(counter % 2 == 0) {
				printf("%d\t", temp->data);				
			}
			counter++;
			temp = temp->link;
		}
		printf("\n");		
	}
}




<!DOCTYPE html>
<html lang="en" ng-app="employeeApp">
<head>
    <meta charset="UTF-8">
    <title>Employee Details</title>
    <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.8.2/angular.min.js"></script>
	<script>
		// app.js

var employeeApp = angular.module('employeeApp', []);

employeeApp.controller('EmployeeController', function($scope) {
    // Sample employee data
    $scope.employees = [
        { name: 'John Doe', department: 'HR', salary: 50000 },
        { name: 'Jane Smith', department: 'IT', salary: 60000 },
        { name: 'Bob Johnson', department: 'Finance', salary: 55000 },
        { name: 'Alice Williams', department: 'HR', salary: 52000 },
        // Add more employee data as needed
    ];

    // Fetch unique departments from employee data
    $scope.departments = Array.from(new Set($scope.employees.map(employee => employee.department)));
});

	</script>
</head>
<body>
    <div ng-controller="EmployeeController">
        <label>Filter by Department:</label>
        <select ng-model="selectedDepartment" ng-options="dept for dept in departments">
            <option value="">All Departments</option>
        </select>

        <table border="1">
            <tr>
                <th>Name</th>
                <th>Department</th>
                <th>Salary</th>
            </tr>
            <tr ng-repeat="employee in employees | filter: { department: selectedDepartment } | orderBy: 'salary'">
                <td>{{ employee.name }}</td>
                <td>{{ employee.department }}</td>
                <td>{{ employee.salary }}</td>
            </tr>
        </table>
    </div>

    <script src="app.js"></script>
</body>
</html>


print("empty plot specify the axes of limit of the graphics : ")
plot(1,type="n",xlab="",ylab="",xlim=c(0,20),ylim=c(0,20))
